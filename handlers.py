import logging

from aiogram import F, types, Router
from aiogram.filters import CommandStart, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from sqlalchemy.future import select
from sqlalchemy.orm import Session
from config import ADMIN_IDS
from database.models import News, async_session, User, Banned, engine
from keyboards import main_keyboard, admin_keyboard


logging.basicConfig(level=logging.INFO)

router = Router()  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Router
admin_ids = ADMIN_IDS

class Form(StatesGroup):
    waiting_for_text = State()

async def is_user_banned(user_id: int) -> bool:
    async with async_session() as session:
        stmt = select(Banned).where(Banned.tg_id == user_id)
        result = await session.execute(stmt)
        banned_user = result.scalar_one_or_none()  # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç –∏–ª–∏ None
        return banned_user is not None

@router.message(CommandStart())
async def startcom(message: types.Message):
    if message.from_user.id in admin_ids:
        await message.answer("–°–∞–∞–ª–∞–º–º–∞ –∞–¥–º–∏–Ω –∂–¥–∏ –ø—Ä–æ—Å—Ç–æ")
    else:
        async with async_session() as session:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            stmt = select(User).where(User.tg_id == message.from_user.id)
            result = await session.execute(stmt)
            exists = result.scalar_one_or_none()  # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞–ø–∏—Å—å –∏–ª–∏ None
        if not exists:
            async with async_session() as session:
                id_users = User(tg_id=message.from_user.id, tg_us = message.from_user.username)
                session.add(id_users)
                await session.commit()
                session.refresh(id_users)
        await message.answer("–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –≤—ã –ø–æ–ø–∞–ª–∏ –≤ –ø—Ä–µ–¥–ª–æ–∂–∫—É –•–ù!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=main_keyboard())

   
@router.message(F.text == '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å')
async def news(message: types.Message, state: FSMContext):
    if await is_user_banned(message.from_user.id):
        await message.reply("üö´ –í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è")
        return
    await message.reply("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ—Å—Ç—å (–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–ª–æ–∂–∏—Ç–µ —Å–∫—Ä–∏–Ω—ã)")
    await state.set_state(Form.waiting_for_text)

@router.message(StateFilter(Form.waiting_for_text))
async def waitnews(message: types.Message, state: FSMContext):
    async with async_session() as session:
        new_news = News(user_us=message.from_user.username ,user_id=message.from_user.id, text=message.text, status='waiting')
        session.add(new_news)
        await session.commit()
        session.refresh(new_news)
        news_id = new_news.id
        await state.update_data(user_u=message.from_user.username)
    admin_message = f'–ù–æ–≤–∞—è –Ω–æ–≤–æ—Å—Ç—å –Ω–æ–º–µ—Ä {news_id}\nTelegram ID –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: {message.from_user.id}, @{message.from_user.username}'
    for admin_id in admin_ids:
        await message.bot.forward_message(admin_id, from_chat_id=message.chat.id, message_id=message.message_id)
        await message.bot.send_message(admin_id, admin_message, reply_markup=admin_keyboard(news_id))
    await message.answer(f"–ù–æ–≤–æ—Å—Ç—å –Ω–æ–º–µ—Ä {news_id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ")
 

@router.callback_query()
async def confirm_callback(callback_query: types.CallbackQuery, state: FSMContext):
    action, news_id = callback_query.data.split(":")
    async with async_session() as session:
        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç—å –ø–æ ID
        news_query = select(News).where(News.id == int(news_id))
        result = await session.execute(news_query)
        news = result.scalar_one_or_none()  # –ü–æ–ª—É—á–∞–µ–º —Å–∞–º –æ–±—ä–µ–∫—Ç News

        if news:
        
                usern = news.user_us
                if action == "approve":
                    if news.status == 'waiting':
                        news.status = 'accepted'
                        await session.commit()
                        user_id = news.user_id

                        await callback_query.bot.send_message(
                            user_id,
                            text=f"–í–∞—à–∞ –Ω–æ–≤–æ—Å—Ç—å –Ω–æ–º–µ—Ä {news_id} –æ–¥–æ–±—Ä–µ–Ω–∞. –°–∫–æ—Ä–æ –æ–Ω–∞ –ø–æ—è–≤–∏—Ç—Å—è –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ!"
                        ) 
                        await callback_query.message.edit_text(f"–û–¥–æ–±—Ä–µ–Ω–æ –¥–ª—è @{usern} ({user_id})")
                        await callback_query.answer()
                    else:
                        await callback_query.answer(f"–ù–æ–≤–æ—Å—Ç—å –Ω–æ–º–µ—Ä {news_id} —É–∂–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞", show_alert=True) 
                        await callback_query.message.edit_text(f"–ù–æ–≤–æ—Å—Ç—å {news_id} —É–∂–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞") 
                        
                        
                elif action == "reject":
                    if news.status == 'waiting':
                        news.status = 'rejected'
                        await session.commit()
                        user_id = news.user_id

                        await callback_query.bot.send_message(
                            user_id,
                            text=f"–í–∞—à–∞ –Ω–æ–≤–æ—Å—Ç—å –Ω–æ–º–µ—Ä {news_id} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞"
                        ) 
                        await callback_query.message.edit_text(f"–û—Ç–∫–ª–æ–Ω–µ–Ω–æ –¥–ª—è @{usern} ({user_id})")
                        await callback_query.answer()
                    else:
                        await callback_query.answer(f"–ù–æ–≤–æ—Å—Ç—å –Ω–æ–º–µ—Ä {news_id} —É–∂–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞", show_alert=True) 
                        await callback_query.message.edit_text(f"–ù–æ–≤–æ—Å—Ç—å {news_id} —É–∂–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞") 

                else:
                    if news.status == 'waiting':
                        news.status = 'banned'
                        id_users = Banned(tg_id=news.user_id)
                        session.add(id_users)
                        await session.commit()
                        session.refresh(id_users)
                        user_id = news.user_id
                        await callback_query.message.edit_text(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{usern} ({user_id}) –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.")
                        await callback_query.bot.send_message(
                                user_id,
                                text=f"üö´ –í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã."
                            )
                    else:
                        await callback_query.answer(f"–ù–æ–≤–æ—Å—Ç—å –Ω–æ–º–µ—Ä {news_id} —É–∂–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞", show_alert=True) 
                        await callback_query.message.edit_text(f"–ù–æ–≤–æ—Å—Ç—å {news_id} —É–∂–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞") 
        
        else:
            await callback_query.answer("–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)  
            await callback_query.message.edit_text("–Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
